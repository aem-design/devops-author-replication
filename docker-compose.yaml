version: "3.9"

services:

  author:
    image: aemdesign/aem:6.5.11.0-jdk11
    hostname: author
    healthcheck:
      test: curl -u admin:admin --header Referer:localhost --silent --connect-timeout 5 --max-time 5 localhost:8080//system/console/bundles.json | grep -q \"state\":\"Installed\" && exit 1 || exit 0
      interval: 10s
      timeout: 10s
      retries: 20
      start_period: 1s
    ports:
      - 4502:8080
      - 30303:58242
    environment:
      - AEM_RUNMODE=-Dsling.run.modes=author,crx3,crx3tar,localdev,nosamplecontent
      - AEM_JVM_OPTS=-server -Xms248m -Xmx1524m -XX:MaxDirectMemorySize=256M -XX:+CMSClassUnloadingEnabled -Djava.awt.headless=true -Dorg.apache.felix.http.host=0.0.0.0 -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=58242,suspend=n
    volumes:
      - author-data:/aem/crx-quickstart/repository
    labels:
      # note that you want this frontened to match the last. otherwise it will match login.${HOST_DOMAIN}"
      traefik.frontend.priority: 1
      traefik.enable: true
      traefik.http.routers.author.rule: "Host(`author.localhost`)"
      traefik.http.routers.author.entrypoints: web
      traefik.http.routers.author_https.rule: "Host(`author.localhost`)"
      traefik.http.routers.author_https.tls: true
      traefik.http.routers.author_https.entrypoints: websecure
      traefik.http.services.author.loadbalancer.passHostHeader: true
    networks:
      - default
      - author-network
      - publish-network
      - dispatcher-network

  publish:
    image: aemdesign/aem:6.5.11.0-jdk11
    hostname: publish
    healthcheck:
      test: curl -u admin:admin --header Referer:localhost --silent --connect-timeout 5 --max-time 5 localhost:8080//system/console/bundles.json | grep -q \"state\":\"Installed\" && exit 1 || exit 0
      interval: 10s
      timeout: 10s
      retries: 20
      start_period: 30s
    ports:
      - 4503:8080
      - 30304:58242
    environment:
      - AEM_RUNMODE=-Dsling.run.modes=publish,crx3,crx3tar,localdev,nosamplecontent
      - AEM_JVM_OPTS=-server -Xms248m -Xmx1524m -XX:MaxDirectMemorySize=256M -XX:+CMSClassUnloadingEnabled -Djava.awt.headless=true -Dorg.apache.felix.http.host=0.0.0.0 -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=58242,suspend=n
    labels:
      # note that you want this frontened to match the last. otherwise it will match login.${HOST_DOMAIN}"
      traefik.frontend.priority: 1
      traefik.enable: true
      traefik.http.routers.publish.rule: "Host(`publish.localhost`)"
      traefik.http.routers.publish.entrypoints: web
      traefik.http.routers.publish_https.rule: "Host(`publish.localhost`)"
      traefik.http.routers.publish_https.tls: true
      traefik.http.routers.publish_https.entrypoints: websecure
      traefik.http.services.publish.loadbalancer.passHostHeader: true
    volumes:
      - publish-data:/aem/crx-quickstart/repository
    networks:
      - default
      - publish-network

  dispatcher:
    image: aemdesign/dispatcher
    hostname: dispatcher
    ports:
      - 9080:8080
      - 9433:8433
    environment:
      - RENDERER_PORT=4503
      - RENDERER_HOST=publish
      - DISPATCHER_CONFIG=publish
    links:
      - publish
      - author
    labels:
      # note that you want this frontened to match the last. otherwise it will match login.${HOST_DOMAIN}"
      traefik.frontend.priority: 1
      traefik.enable: true
      traefik.http.routers.dispatcher.rule: "Host(`dispatcher.localhost`)"
      traefik.http.routers.dispatcher.entrypoints: web
      traefik.http.routers.dispatcher_https.rule: "Host(`dispatcher.localhost`)"
      traefik.http.routers.dispatcher_https.tls: true
      traefik.http.routers.dispatcher_https.entrypoints: websecure
      traefik.http.services.dispatcher.loadbalancer.passHostHeader: true
    volumes:
      - dispatcher-data:/data/httpd/cache
    networks:
      - default
      - dispatcher-network

  traefik:
    image: traefik
    environment:
      - TZ=Australia/Sydney
    security_opt:
      - no-new-privileges:true
    restart: "always"
    command:
      - "--log.level=ERROR"
      - "--accesslog=true"
      - "--api.insecure=true" # Don't do that in production!
      - "--api.dashboard=true" # Don't do that in production!
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--global.sendAnonymousUsage=true"


      # Entrypoints for HTTP, HTTPS, and NX (TCP + UDP)
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      # - "--entrypoints.web.http.redirections.entryPoint.permanent=true"

      # Manual keys
      - "--providers.file.directory=/etc/traefik/dynamic_conf"
      - "--providers.file.watch=true"

    labels:
      traefik.frontend.priority: 1
      traefik.enable: true
      traefik.http.routers.dashboard.rule: "Host(`traefik.localhost`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      traefik.http.routers.dashboard.entrypoints: websecure
      traefik.http.routers.dashboard.tls: true
      traefik.http.routers.dashboard.service: api@internal

    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Persist certificates, so we can restart as often as needed
      - ./services/traefik/certs:/letsencrypt
      - ./services/traefik/config/dynamic:/etc/traefik/dynamic_conf/conf.yml:ro

    depends_on:
      - createcert
      - createcertpkcs12

    networks:
      - seleniumgrid
      - author-network
      - publish-network
      - dispatcher-network
      - default
      - internal

  createcert:
    image: brunopadz/mkcert-docker
    environment:
      - TZ=Australia/Sydney
    working_dir: /root/.local/share/mkcert
    command:
      - /bin/sh
      - -c
      - "test ! -f mkcert.key && mkcert -install && mkcert -key-file mkcert.key -cert-file mkcert.pem -client author.localhost publish.localhost dispatcher.localhost localhost 127.0.0.1 ::1"
    volumes:
      - ./services/traefik/certs:/root/.local/share/mkcert

  createcertpkcs12:
    image: frapsoft/openssl
    environment:
      - TZ=Australia/Sydney
    working_dir: /export
    entrypoint: ""
    command:
      - /bin/ash
      - -c
      - "test ! -f mkcert.pfx && openssl pkcs12 -export -out mkcert.pfx -in mkcert.pem -inkey mkcert.key -certfile rootCA.pem -passout pass:123"
    depends_on:
      - createcert
    volumes:
      - ./services/traefik/certs:/export

networks:
  internal:
  seleniumgrid:
  author-network:
  publish-network:
  dispatcher-network:

volumes:
  author-data:
  publish-data:
  dispatcher-data:
